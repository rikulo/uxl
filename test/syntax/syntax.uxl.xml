<!-- This is used to test all features of UXL.
    The generated Dart file is not runnable.
-->
<?dart
library foo;

import 'package:rikulo/view.dart';
import 'package:rikulo_uxl/uxl.dart';
?>

<? template InputHead MagicBox ?>

<Template name="Inputs" args="friends, zoo"
description="A template to create a group of input views">
  <View layout="type: linear; orient: vertical" style="border: 2px solid #333">
    <InputHead label="Form"></InputHead>
    <View forEach="each in ['text', 'password', 'multiline', 'number', 'date', 'color']"
    layout="type: linear; align: center; spacing: 0 3" class="foo1 foo2">
      ${each}
      <TextBox type="$each" if="each != 'multiline'"/>
      <TextArea if="each == 'multiline'"/>
    </View>
  </View>

  <Template name="InputDetail" args="each">
    <ListHead label="${each.name}" image="${each.photo}"/>
    <InputHead label="${each.description}"/>
  </Template>
  <ListView model="${friends}" data-detail="${InputDetail}" data-header="${InputHeader}"/>

  <View layout="type: linear; orient: vertical" control="MagicControl">
    <MagicBox owner="${animal}" forEach="animal in zoo.animals"/>
    <TextView html="
      ${friends[0]}
      <ul>
        <li>abc</li>
        <li>xyz</li>
      </ul>">
    </TextView>
  </View>
  <AnotherFood/>
</Template>

<Template name="AnotherFood" args="foods, classes">
  <Apply forEach="each in foods">
    $each is found.
    <Apply if="each == 'orange'">
      <View class="hilite">This is nice.</View>
    </Apply>
    More and more to come.
  </Apply>
  <View tag="ul" tag-contentEditable="true" id="abc"/>
  <View tag="li" class="${classes}">
    this is inner text.
    <![CDATA[
    Not TextView
    ]]>
  </View>
</Template>

<?dart
//used to make the generated dart error free
List<View> MagicBox({parent, owner}) => new List();
List<View> InputHead({parent, label}) => new List();

class InputHeader {
}
class ListView extends View {
  var model;
}
class ListHead extends View {
  String label;
  String image;
}

class MagicControl extends Control {
  
}
?>